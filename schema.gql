# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type desireType {
  desiredOccupation: [String!]
  firstChoiceOfWork: String
  secondChoiceOfWork: String
  employmentType: [String!]
  annualSalary: String
  previousSalary: String
}

type educationType {
  degree: String
  institute: String
  year: String
  info: String
}

type addressType {
  Country: String
  postalCode: String
  building: String
}

type experiencesType {
  position: String
  institute: String
  year: String
  info: String
}

type User {
  uid: String
  first_name: String
  last_name: String
  userType: String
  profileImageURL: String
  userName: String
  name: String
  currentOccupation: String
  age: String
  birthday: String
  phone: String
  otherEmail: String
  documents: [String!]
  email: String
  location: String
  about: String
  desire: desireType
  profession: String
  otherOccupation: [String!]
  education: [educationType!]
  address: addressType
  experiences: [experiencesType!]
  skills: [String!]
  languages: [String!]
  token: String
}

type SuccessType {
  success: String!
}

type workingHoursType {
  monday: String
  tuesday: String
  wednesday: String
  thursday: String
  friday: String
  saturday: String
  sunday: String
}

type Company {
  uid: String
  userType: String
  profileImageURL: String
  userName: String
  email: String
  name: String
  owner: String
  coverImage: String
  total_employee: String
  location: String
  website: String
  phone: String
  established: String
  about: String
  token: String
  workingHours: workingHoursType
}

type ChatMessage {
  jobId: String!
  content: String
  senderId: String
  createdAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Job {
  id: String
  company: Company!
  companyID: String
  title: String
  coverImg: String
  experience: String
  employmentType: [String!]
  position: String
  offer_salary: String
  description: String
  responsibilities: String
  qualification: String
  skills: [String!]
  freeWords: String
  location: String
  createdAt: String
  updatedAt: String
  user: User!
  jobs: [Job!]!
}

type ApplyJobs {
  id: String
  user_id: String
  company_id: String
  job_id: String
  status: String
  name: String
  coverLetter: String
  message: String
  email: String
  chatMessages: [ChatMessage!]
  createdAt: String
  updatedAt: String
}

type Query {
  getUser: User!
  getAllUsers: [User!]!
  getUserById(uid: String!): User!
  getLoginUser(uid: String!): User!
  getJobs: [Job!]!
  getJobById(id: String!): Job!
  getCompanyJobs: [Job!]!
  getApplyJobsByUser: [ApplyJobs!]!
  getLoginCompany(uid: String!): Company!
  getCompanyById: Company!
  getCompany: Company!
  messages: [ChatMessage!]!
}

type Mutation {
  createUser(userInputType: UserInputType!): User!
  updateUser(userInputType: UserInputType!): User!
  deleteUser(id: String!): SuccessType
  createJob(jobInput: JobInput!): Job
  applyJob(jobApplyDto: JobApplyDto!): ApplyJobs
  createCompany(createCompanyArgs: CreateCompanyArgs!): Company!
  updateCompany(createCompanyArgs: CreateCompanyArgs!): Company!
  messageSend(jobId: String!, content: String!, senderId: String!): ChatMessage!
}

input UserInputType {
  userInfo: String
}

input JobInput {
  jobInfo: String!
}

input JobApplyDto {
  company_id: String!
  job_id: String!
  user_id: String!
  name: String!
  coverLetter: String!
  message: String!
  email: String!
}

input CreateCompanyArgs {
  companyInfo: String!
}

type Subscription {
  messageSent: ChatMessage!
  messageSentByJobId(jobId: String!): ChatMessage!
}